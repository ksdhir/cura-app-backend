// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model ElderProfile {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  preferredName String?
  dateOfBirth DateTime?
  email String @unique
  phoneNumber String?
  sex String?
  medicalConditions String[]
  bloodType String?
  allergies String[]
  notes String?
  emergencyContacts String[]
  userFirebaseId String?
  heartRateRecords HeartRateRecord[]
  defaultLocation String[]

  careGiverProfile CareGiverProfile? @relation(fields: [careGiverProfileId], references: [id])
  careGiverProfileId String?
}

model CareGiverProfile {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  preferredName String?
  email String @unique
  phoneNumber String?
  notifications Notification[]
  elderProfiles ElderProfile[]
  requestToken String? //TODO: ask meraldo about this
}

model Notification {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  elderProfileId String?
  timestamp DateTime?
  type NotificationType @default(OTHERS)
  actionType NotificationActionType @default(NO_ACTION)
  careGiverProfile CareGiverProfile? @relation(fields: [careGiverProfileId], references: [id])
  careGiverProfileId String?
}

model HeartRateRecord {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  elderProfile ElderProfile? @relation(fields: [elderProfileId], references: [id])
  elderProfileId String?
  currentBpm Int?
  timestamp DateTime?
  upTo90Avg Int?
  upTo90Min Int?
  upTo90Max Int?
}

enum NotificationType {
  MOVEMENT
  FALL
  CRITICAL_HEART_RATE
  OTHERS
}

enum NotificationActionType {
  ACCEPT
  REJECT
  NO_ACTION
  OTHERS
}