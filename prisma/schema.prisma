// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model ElderProfile {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  preferredName String?
  age Int?
  email String @unique
  phoneNumber String?
  sex SexEnum? @default(PREFER_NOT_TO_SAY)
  medicalConditions String?
  medications String?
  bloodType BloodType?
  allergies String?
  notes String?
  heartRateRecords HeartRateRecord[]
  defaultLocation String[]
  emergencyContacts CareGiverProfile? @relation(fields: [careGiverIds], references: [id])
  careGiverIds String[]  @db.ObjectId
  emergencyContactRelationships EmergencyContactRelationship[]
}

model CareGiverProfile {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  preferredName String?
  email String @unique
  phoneNumber String?
  notifications Notification[]
  requestToken String? 
  elders ElderProfile[]
}

model Notification {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  elderProfileId String?
  timestamp DateTime?
  type NotificationType? @default(OTHERS)
  actionType NotificationActionType @default(NO_ACTION)
  careGiverProfile CareGiverProfile? @relation(fields: [careGiverProfileId], references: [id])
  careGiverProfileId String?
}

model HeartRateRecord {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  elderProfile ElderProfile? @relation(fields: [elderProfileId], references: [id])
  elderProfileId String?
  currentBpm Int?
  timestamp DateTime?
  upTo90Avg Int?
  upTo90Min Int?
  upTo90Max Int?
}

//TYPE
type EmergencyContactRelationship {
  email String
  relationship String?
}

//ENUMS
enum NotificationType {
  MOVEMENT
  FALL
  CRITICAL_HEART_RATE
  CONNECTION_REQUEST
  OTHERS
}

enum NotificationActionType {
  ACCEPT
  REJECT
  NO_ACTION
  PENDING
  OTHERS
}

enum SexEnum {
  MALE
  FEMALE
  PREFER_NOT_TO_SAY
}

enum BloodType {
  A
  B
  AB
  O
  A_POSITIVE
  A_NEGATIVE
  B_POSITIVE
  B_NEGATIVE
  AB_POSITIVE
  AB_NEGATIVE
  O_POSITIVE
  O_NEGATIVE
}